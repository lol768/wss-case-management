# This is the configuration file for default setttings the application.
# Connection password credentials and secret keys should be kept out of this file.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

app {
  name.uppercase = "CaseManagement"
  name.id = "case-management"
  # Override this locally to use entirely different webgroups from prod
  webgroup.prefix = "in-"${app.name.id}"-"
  webgroup.team.prefix = ${app.webgroup.prefix}"team-"
}

memcached.consistentHashing = true

play {
  i18n.langs = [ "en" ]

  http {
    secret.key = "changeme"

    # Trust all internal IP addresses for X-Forwarded
    forwarded.trustedProxies = [ "137.205.0.0/16", "10.0.0.0/8", "::1", "127.0.0.1" ]

    # Max total size of uploaded files in a request
    parser.maxDiskBuffer = ${wellbeing.files.maxTotalFileSize}

    flash.sameSite = strict
  }

  allowGlobalApplication = false

  evolutions {
    enabled = true
    autoApply = true
  }

  server {
    http {
      port = 8080
      port = ${?http.port}
    }

    akka {
      default-host-header = ${domain}
    }
  }

  modules {
    enabled += system.AppModule
    enabled += system.ThreadsModule
    enabled += warwick.sso.SSOClientModule
    enabled += uk.ac.warwick.util.mywarwick.MyWarwickModule
    disabled += org.databrary.PlayLogbackAccessModule

    disabled += play.api.cache.EhCacheModule
    enabled += com.github.mumoshu.play2.memcached.MemcachedModule

    cache {
      defaultCache = default
      bindCaches = ["play"]
    }
  }

  filters {
    // Access logging filter must be first; CSRF same site cookie filter must be before (default) CSRF filter
    enabled = [org.databrary.PlayLogbackAccessFilter, system.CSRFSameSiteCookieFilter] ${play.filters.enabled}
    enabled += system.AdditionalSecurityHeadersFilter
    enabled += system.CacheDefaultHeadersFilter
    enabled += warwick.core.timing.ServerTimingFilter
    enabled += play.filters.gzip.GzipFilter

    headers {
      contentSecurityPolicy = ${csp}
      reportTo = ${reportTo}
      featurePolicy = ${featurePolicy}
      referrerPolicy = "strict-origin-when-cross-origin"

      # This must contain no-cache in order for CSRF cookies to be set
      # https://warwick.slack.com/archives/GC024AH3L/p1535127425000100
      cacheControl = "no-cache"
    }
    hosts {
      allowed += ${domain}
      allowed += ".lnx.warwick.ac.uk:8080"
      allowed += ".lnx.warwick.ac.uk:8443"
      allowed += "127.0.0.1:8080"
      allowed += "127.0.0.1:8443"
      allowed += "" // HTTP/1.0 requests
    }
    csrf {
      cookie {
        name = "WSS-CSRF"
        secure = true
        httpOnly = true
        sameSite = strict
      }
      header {
        bypassHeaders {
          X-Requested-With = "*"
        }
        protectHeaders {
          Authorization = ""
        }
      }
    }
  }

  mailer {
    host = "smtp.mailtrap.io"
    port = 2525
    tlsRequired = true
  }

  temporaryFile {
    reaper {
      enabled = true
      initialDelay = "5 minutes"
      interval = "30 seconds"
      olderThan = "5 minutes"
    }
  }
}

cspReportUri = "https://warwick.report-uri.com/r/d/csp/enforce"

// This is extended above
csp = "default-src 'self'"
csp = ${csp}"; img-src 'self' data: https://"${wellbeing.photos.host}
csp = ${csp}"; style-src 'self' 'report-sample' https://fonts.googleapis.com"
csp = ${csp}"; font-src 'self' https://fonts.gstatic.com"
csp = ${csp}"; script-src 'self' 'report-sample'"
csp = ${csp}"; frame-src 'self' https://websignon.warwick.ac.uk https://campus.warwick.ac.uk "${mywarwick.instances.0.baseUrl}
csp = ${csp}"; connect-src 'self' "${mywarwick.instances.0.baseUrl}
csp = ${csp}"; object-src 'none'"
csp = ${csp}"; report-uri "${cspReportUri}
csp = ${csp}"; report-to csp"

reportTo = "{\"url\":\""${cspReportUri}"\",\"group\":\"csp\",\"max-age\":31557600}"

// This is extended above
featurePolicy = "accelerometer 'self' "${mywarwick.instances.0.baseUrl}
featurePolicy = ${featurePolicy}"; camera 'none'"
featurePolicy = ${featurePolicy}"; geolocation 'none'"
featurePolicy = ${featurePolicy}"; gyroscope 'self' "${mywarwick.instances.0.baseUrl}
featurePolicy = ${featurePolicy}"; magnetometer 'none'"
featurePolicy = ${featurePolicy}"; microphone 'none'"
featurePolicy = ${featurePolicy}"; payment 'none'"
featurePolicy = ${featurePolicy}"; usb 'none'"

akka {
  # Funnel Akka logging through SLF4J like everything else
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  # Double play's default parallelism.
  # https://www.playframework.com/documentation/2.6.x/ThreadPools#Configuring-the-default-thread-pool
  # Seems like some (scheduling) tasks are using the default pool more than they should.
  # In the meantime, let's allow more threads in the default pool.
  actor.default-dispatcher {
    fork-join-executor {
      parallelism-factor = 2.0
    }
  }
}

slick.dbs.default {
  profile = "slick.jdbc.H2Profile$"
  db {
    driver = org.h2.Driver
    url = "jdbc:h2:mem:play;MODE=Oracle"
    connectionTimeout = 30000
  }
}

sso-client {
  httpbasic {
    allow = true
  }
  mode = new
  cluster {
    enabled = true
    db = default
  }
  shire {
    sscookie {
      name = "SSO-SSC-"${app.name.uppercase}
      domain = ${domain}
      path = "/"
      secure = true
    }
    location = "https://"${domain}"/sso/acs"
    providerid = "urn:"${domain}":"${app.name.id}":service"
  }
  logout = "https://"${domain}"/sso/logout"
  role-groups {
    sysadmin = ${app.webgroup.prefix}"sysadmins"
    masqueraders = ${sso-client.masquerade.group}
    admin = ${app.webgroup.prefix}"admins"
  }
  masquerade {
    group = ${app.webgroup.prefix}"masqueraders"
  }
}

# Enable logback-access
logbackaccess.config.resource=logback-access.xml

wellbeing {
  tabula {
    root = "https://tabula-sandbox.warwick.ac.uk"
    user = "casemanagement-tabula-api-user"
    profile = ${wellbeing.tabula.root}"/api/v1/member"
    query = ${wellbeing.tabula.root}"/api/v1/membersearch"
    timetable = ${wellbeing.tabula.profile}"/:universityID/timetable/events"
    testUsers = []
  }

  testTeamMembers {}
  testAdmins = []
  dummyDataGeneration = false

  photos {
    host = "photos-test.warwick.ac.uk"
  }

  files {
    # The total file size of all uploaded files in the request
    maxTotalFileSize = 10m

    # The individual maximum file size of a single file. Obviously don't make this bigger than maxTotalFileSize
    maxIndividualFileSize = ${wellbeing.files.maxTotalFileSize}

    allowedMimeTypes = [
      "text/plain",
      "application/pdf",
      "application/postscript",
      "image/*",
      "audio/*",
      "video/*",
      "application/msword",
      "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
      "application/vnd.ms-powerpoint",
      "application/vnd.openxmlformats-officedocument.presentationml.presentation",
      "application/vnd.openxmlformats-officedocument.presentationml.slideshow",
      "application/vnd.ms-excel",
      "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
      "application/zip",
      "application/rtf",
      "text/calendar",
      "message/rfc822"
    ]

    # CASE-185
    serveInlineMimeTypes = [
      "application/pdf",
      "image/jpeg",
      "image/png",
      "image/gif",
      "image/tiff",
      "image/bmp",
      "image/pjpeg",
      "audio/*",
      "video/*"
    ]
  }

  validClientUserTypes = [Student, Applicant]

  features {
    notifications {
      mywarwick = true
      email = true
    }

    appointmentClientReminders = true
    pushAppointmentsToOffice365 = true
    registrationInvites = false
  }
}

threads {
  mailer {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 50
    }
  }
  objectStorage {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 50
    }
  }
  userLookup {
    executor = "thread-pool-executor"
    throughput = 1
    thread-pool-executor {
      fixed-pool-size = 50
    }
  }
}

virusscan {
  scan-uploads = true
  api.host = "https://virusscan.warwick.ac.uk"
}