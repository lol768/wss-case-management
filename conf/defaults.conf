# This is the configuration file for default setttings the application.
# Connection password credentials and secret keys should be kept out of this file.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.

app {
  name.uppercase = "CaseManagement"
  name.id = "case-management"
}

memcached.consistentHashing = true

play {
  http.secret.key = "changeme"
  i18n.langs = [ "en" ]

  # Trust all internal IP addresses for X-Forwarded
  http.forwarded.trustedProxies = [ "137.205.0.0/16", "10.0.0.0/8", "::1", "127.0.0.1" ]

  evolutions {
    enabled = true
    autoApply = true
  }

  server {
    http {
      port = 8080
      port = ${?http.port}
    }

    akka {
      default-host-header = ${domain}
    }
  }

  modules {
    enabled += system.AppModule
    enabled += warwick.sso.SSOClientModule
    disabled += org.databrary.PlayLogbackAccessModule

    disabled += play.api.cache.EhCacheModule
    enabled += com.github.mumoshu.play2.memcached.MemcachedModule

    cache {
      defaultCache = default
      bindCaches = ["play"]
    }
  }

  filters {
    headers {
      contentSecurityPolicy = ${csp}
    }
    csrf {
      cookie {
        name = "csrfToken"
        secure = true
      }
      header {
        bypassHeaders {
          X-Requested-With = "*"
        }
        protectHeaders {
          Authorization = ""
        }
      }
    }
  }
}

// This is extended above
csp = "default-src 'self'"
csp = ${csp}"; img-src 'self' https://www.google-analytics.com"
csp = ${csp}"; style-src 'self' 'unsafe-inline' fonts.googleapis.com"
csp = ${csp}"; font-src 'self' fonts.gstatic.com"
csp = ${csp}"; script-src 'self' 'unsafe-inline' 'unsafe-eval' www.google-analytics.com"
csp = ${csp}"; connect-src 'self' https://my.warwick.ac.uk"
csp = ${csp}"; frame-src 'self' https://websignon.warwick.ac.uk https://search.warwick.ac.uk https://my.warwick.ac.uk"
csp = ${csp}"; object-src 'none'"

akka {
  # Funnel Akka logging through SLF4J like everything else
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"

  actor.provider = "akka.cluster.ClusterActorRefProvider"
}

slick.dbs.default {
  profile = "slick.jdbc.H2Profile$"
  db {
    driver = org.h2.Driver
    url = "jdbc:h2:mem:play;MODE=Oracle"
    connectionTimeout = 30000
  }
}

sso-client {
  httpbasic {
    allow = true
  }
  mode = new
  cluster {
    enabled = true
    db = default
  }
  shire {
    sscookie {
      name = "SSO-SSC-"${app.name.uppercase}
      domain = ${domain}
      path = "/"
      secure = true
    }
    location = "https://"${domain}"/sso/acs"
    providerid = "urn:"${domain}":"${app.name.id}":service"
  }
  logout = "https://"${domain}"/sso/logout"
  role-groups {
    sysadmin = "in-"${app.name.id}"-admins"
    masqueraders = "in-"${app.name.id}"-masqueraders"
  }
  masquerade {
    group = "in-"${app.name.id}"-masqueraders"
  }
}

# Enable logback-access
logbackaccess.config.resource=logback-access.xml