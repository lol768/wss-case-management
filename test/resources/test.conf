include "defaults"

domain = "example.warwick.ac.uk"

# Picked up by MockUserLookupService
userlookup.test-data.users = [
  { usercode = "ss1" }
  { usercode = "ss2" }
  { usercode = "ss3" }
  { usercode = "mh1" }
  { usercode = "mh2" }
  { usercode = "mh3" }
  { usercode = "clng1" }
  { usercode = "clng2" }
  { usercode = "clng3" }
  { usercode = "dis1" }
  { usercode = "dis2" }
  { usercode = "dis3" }
]

# Picked up by MockGroupService
webgroups.test-data.groups = [
  {
    name = in-case-management-team-wellbeing
    members = [ "ss1", "ss2", "ss3" ]
    type = Arbitrary
    updated = "2018-01-01T12:00:00Z"
  }
  {
    name = in-case-management-team-mental-health
    members = [ "mh1", "mh2", "mh3" ]
    type = Arbitrary
    updated = "2018-01-01T12:00:00Z"
  }
  {
    name = in-case-management-team-counselling
    members = [ "clng1", "clng2", "clng3" ]
    type = Arbitrary
    updated = "2018-01-01T12:00:00Z"
  }
  {
    name = in-case-management-team-disability
    members = [ "dis1", "dis2", "dis3" ]
    type = Arbitrary
    updated = "2018-01-01T12:00:00Z"
  }
]

play {
  http.secret.key = "changeme"

  evolutions.enabled = true
  evolutions.db.default.autoApply = true
  evolutions.db.default.autoApplyDowns = true

  modules {
    disabled = []
    disabled += "com.github.mumoshu.play2.memcached.MemcachedModule"
    enabled += "system.NullCacheModule"
  }
}

blobStore.default {
  container = "test"
  provider = "transient"
}

slick.dbs.default {
  profile = "slick.jdbc.H2Profile$"
  db {
    driver = org.h2.Driver
    url = "jdbc:h2:mem:play;MODE=PostgreSQL;DATABASE_TO_UPPER=false"
  }
}

sso-client {
  origin {
    login.location = "https://sso.example.com/login"
  }
  credentials {
    certificate = "file:///var/warwick/ssl/example.warwick.ac.uk.crt"
    key = "file:///var/warwick/ssl/example.warwick.ac.uk.key"
    chain = "file:///var/warwick/ssl/intermediates/terena256.pem"
  }
  trustedapps {
    publickey = "MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuAJsk5wVDYFmklYzCqmUjWWm13GTEyBoTLniqkPEkYkxogJP4CkhaVozKVFna6OCdStN5JNwSTiPHCIWKOspx9xRuaHdgfFRaQzJ6uQsF2LYuNu7L0GmygwDkJ3FXWurrNMnIVYI9VkQ8HPqf8u7S261S2FVo8eYFfGUEU44P+zxAbiYMRwCBs9c+bZ3EbNFhoZA6LnJ5SB4ogc9F8ljoHKD5aKGCp2sZ5c6RG7QmU9duGw9nALK9K/oqNBIFTUmAmQeAPL2xP1cQ3BYHdMPNGN2l0q0DLrWMDQ85POoMMwbL9rbWv7j8Ct1LkUFV1avp/tOA23qljBX2aKTjcAjXwIDAQAB"
    privatekey = "MIIEowIBAAKCAQEAuAJsk5wVDYFmklYzCqmUjWWm13GTEyBoTLniqkPEkYkxogJP4CkhaVozKVFna6OCdStN5JNwSTiPHCIWKOspx9xRuaHdgfFRaQzJ6uQsF2LYuNu7L0GmygwDkJ3FXWurrNMnIVYI9VkQ8HPqf8u7S261S2FVo8eYFfGUEU44P+zxAbiYMRwCBs9c+bZ3EbNFhoZA6LnJ5SB4ogc9F8ljoHKD5aKGCp2sZ5c6RG7QmU9duGw9nALK9K/oqNBIFTUmAmQeAPL2xP1cQ3BYHdMPNGN2l0q0DLrWMDQ85POoMMwbL9rbWv7j8Ct1LkUFV1avp/tOA23qljBX2aKTjcAjXwIDAQABAoIBAEE2Srh9ZlCk/W77MZejxcverKRJ0e/DWnNmpVfmMHHLh1V9MEWnDfpCR0NrYBWbmw5fTHmnbvHkI4O66NOTk/kKscPyA4ibt1hdeenO93lKRLgu10XGJJASdej4oQucrvjO1F1SGlapPAGbcw3bbAMttv6B/lHO2K1eMjV33SN6AZCH0QP9rUZD0Wi7BISKu1Pvb/yzzF44M35WdajXAqwRmSAghVX2SMYHeYpSARPuMXMmCsi5sPuCVOUJyDoI0yABFhFYfwzto1tB/hmHaqQysdXTNu/g25C2drXGLeiLmlB5WOp24v2FkkchIPRmLBwRCxAsJB44b3sCfJMeoFECgYEA2jQHvE7Gw1BZFU8OmsDwUev9zdmFbQFssUlwJvhI6BxVHbrEY9A14450Kw3gbLmpuxWNBoLdBovGwfQsBMMHKlNLLbqzdUpc2MwCSPIMIQKgIqKlmnbN4a36lb/TZsKvStaWdM6uk91AblP0WisB90t9Dlxvui2t5iV4Yp2GPwUCgYEA1+IcVGb3NlYpIO3GmT1ZS3ycSkal8fPau+vTBljaieYqK+32m9dMcQrdtoJfFvvkzIcOw/Pdja7GzUHImZqxkxjMHRBHCmFVq44e4iPNaNpXwGhdn8HLwzjzI8I0HveKt5HyW8rmSTEL3/slQze3JGXIezPXrLCWkuiWH9vBfhMCgYEAr2SZPzU3MbH5GVbFz4D862y9Q2TwihFWFB+KxdhXijOT+2SwDedEGdjc6eqqldqbYyVMiYpRLbzXE/o4E8/Mh6oSSPzE2afff+hkgcwGEdaxb4W7hbCvhxM41Hwv6m7dRlO89sFXtMVo0AYt6PifCO+l4xBMQqQLH27JGMO0MB0CgYAPnta57LFahyV2sn26PMwnQB726OG8/g4Hpuqf/PHjJHpMr202nX90dnrQZ+KFgThu7B7PYufXBpxv4aCoLJ9Iq3SpbbIWODDAtwnZBwon2hSbYXHUy2r49zfwkG7BBtxMqAzHQ4kiJqBbVoq9sFxaD9tPvtKONkDO5HFoYLhBbQKBgAmqwmTNFvLO0iLsOLAVlkiVOyMDJhWsFYAdetVRGE5PsrMKazc9GpKnjkgvVEPz65Ww8Wv6xKPT3k8kXGs+6z7NB8iDxFS8uuqc/eRGGdG1QFbFndX7nlnwSLyxPyPAtvbjqa9SpqBeZV4Mwx73KnQwor4oufstOl3IkCQJKIJU"
  }
}

wellbeing.tabula.root = "https://tabula-test.warwick.ac.uk"

include "fake-mywarwick"